{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u0430\\\\Desktop\\\\cur\\\\src\\\\components\\\\ToggleButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleButton = ({\n  children,\n  onClick,\n  variant = 'primary',\n  size = 'normal',\n  disabled = false,\n  defaultToggled = false,\n  className = '',\n  style = {}\n}) => {\n  _s();\n  const [isToggled, setIsToggled] = useState(defaultToggled);\n  const handleToggle = () => {\n    if (disabled) return;\n    const newState = !isToggled;\n    setIsToggled(newState);\n    if (onClick) {\n      onClick(newState);\n    }\n  };\n  const getSizeClass = () => {\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n        return 'large';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: `toggle-button ${className}`,\n    style: {\n      opacity: disabled ? 0.5 : 1,\n      cursor: disabled ? 'not-allowed' : 'pointer',\n      ...style\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle-switch ${variant} ${getSizeClass()}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isToggled,\n        onChange: handleToggle,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), children && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toggle-label\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleButton, \"zVY66rYqwisaDTeibm+Itnu3JBA=\");\n_c = ToggleButton;\nexport default ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToggleButton","children","onClick","variant","size","disabled","defaultToggled","className","style","_s","isToggled","setIsToggled","handleToggle","newState","getSizeClass","opacity","cursor","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Никита/Desktop/cur/src/components/ToggleButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ToggleButton = ({ \r\n  children, \r\n  onClick, \r\n  variant = 'primary', \r\n  size = 'normal', \r\n  disabled = false,\r\n  defaultToggled = false,\r\n  className = '',\r\n  style = {}\r\n}) => {\r\n  const [isToggled, setIsToggled] = useState(defaultToggled);\r\n\r\n  const handleToggle = () => {\r\n    if (disabled) return;\r\n    \r\n    const newState = !isToggled;\r\n    setIsToggled(newState);\r\n    \r\n    if (onClick) {\r\n      onClick(newState);\r\n    }\r\n  };\r\n\r\n  const getSizeClass = () => {\r\n    switch (size) {\r\n      case 'small': return 'small';\r\n      case 'large': return 'large';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label \r\n      className={`toggle-button ${className}`}\r\n      style={{\r\n        opacity: disabled ? 0.5 : 1,\r\n        cursor: disabled ? 'not-allowed' : 'pointer',\r\n        ...style\r\n      }}\r\n    >\r\n      <div className={`toggle-switch ${variant} ${getSizeClass()}`}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isToggled}\r\n          onChange={handleToggle}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"toggle-slider\"></span>\r\n      </div>\r\n      {children && (\r\n        <span className=\"toggle-label\">\r\n          {children}\r\n        </span>\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,QAAQ;EACRC,OAAO;EACPC,OAAO,GAAG,SAAS;EACnBC,IAAI,GAAG,QAAQ;EACfC,QAAQ,GAAG,KAAK;EAChBC,cAAc,GAAG,KAAK;EACtBC,SAAS,GAAG,EAAE;EACdC,KAAK,GAAG,CAAC;AACX,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACS,cAAc,CAAC;EAE1D,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIP,QAAQ,EAAE;IAEd,MAAMQ,QAAQ,GAAG,CAACH,SAAS;IAC3BC,YAAY,CAACE,QAAQ,CAAC;IAEtB,IAAIX,OAAO,EAAE;MACXA,OAAO,CAACW,QAAQ,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQV,IAAI;MACV,KAAK,OAAO;QAAE,OAAO,OAAO;MAC5B,KAAK,OAAO;QAAE,OAAO,OAAO;MAC5B;QAAS,OAAO,EAAE;IACpB;EACF,CAAC;EAED,oBACEL,OAAA;IACEQ,SAAS,EAAE,iBAAiBA,SAAS,EAAG;IACxCC,KAAK,EAAE;MACLO,OAAO,EAAEV,QAAQ,GAAG,GAAG,GAAG,CAAC;MAC3BW,MAAM,EAAEX,QAAQ,GAAG,aAAa,GAAG,SAAS;MAC5C,GAAGG;IACL,CAAE;IAAAP,QAAA,gBAEFF,OAAA;MAAKQ,SAAS,EAAE,iBAAiBJ,OAAO,IAAIW,YAAY,CAAC,CAAC,EAAG;MAAAb,QAAA,gBAC3DF,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,SAAU;QACnBS,QAAQ,EAAEP,YAAa;QACvBP,QAAQ,EAAEA;MAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFxB,OAAA;QAAMQ,SAAS,EAAC;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACLtB,QAAQ,iBACPF,OAAA;MAAMQ,SAAS,EAAC,cAAc;MAAAN,QAAA,EAC3BA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ,CAAC;AAACd,EAAA,CAxDIT,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}