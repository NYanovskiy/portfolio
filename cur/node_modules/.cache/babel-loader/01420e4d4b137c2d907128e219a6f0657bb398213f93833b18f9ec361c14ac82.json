{"ast":null,"code":"// Storage keys\nexport const STORAGE = {\n  TASKS: 'productivity_tracker_tasks',\n  HABITS: 'productivity_tracker_habits',\n  POMODOROS: 'productivity_tracker_pomodoros',\n  THEME: 'productivity_tracker_theme',\n  BG: 'productivity_tracker_bg'\n};\n\n// Load data from localStorage\nexport const load = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n\n    // Handle background images differently (they're stored as raw data URLs)\n    if (key === STORAGE.BG) {\n      return item || defaultValue;\n    }\n\n    // Parse JSON for other data\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error('Error loading from localStorage:', error);\n    return defaultValue;\n  }\n};\n\n// Save data to localStorage\nexport const save = (key, value) => {\n  try {\n    // Handle background images differently (store as raw data URL)\n    if (key === STORAGE.BG) {\n      if (value && value.trim() !== '') {\n        localStorage.setItem(key, value);\n      } else {\n        localStorage.removeItem(key);\n      }\n      return;\n    }\n\n    // JSON stringify for other data\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n\n    // If it's a quota exceeded error, try to provide helpful feedback\n    if (error.name === 'QuotaExceededError') {\n      throw new Error('Storage quota exceeded. Try uploading a smaller image.');\n    }\n    throw error;\n  }\n};\n\n// Clear all app data\nexport const clearAll = () => {\n  Object.values(STORAGE).forEach(key => {\n    localStorage.removeItem(key);\n  });\n};","map":{"version":3,"names":["STORAGE","TASKS","HABITS","POMODOROS","THEME","BG","load","key","defaultValue","item","localStorage","getItem","JSON","parse","error","console","save","value","trim","setItem","removeItem","stringify","name","Error","clearAll","Object","values","forEach"],"sources":["C:/Users/Никита/Desktop/cur/src/utils/storage.js"],"sourcesContent":["// Storage keys\nexport const STORAGE = {\n  TASKS: 'productivity_tracker_tasks',\n  HABITS: 'productivity_tracker_habits',\n  POMODOROS: 'productivity_tracker_pomodoros',\n  THEME: 'productivity_tracker_theme',\n  BG: 'productivity_tracker_bg'\n};\n\n// Load data from localStorage\nexport const load = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    \n    // Handle background images differently (they're stored as raw data URLs)\n    if (key === STORAGE.BG) {\n      return item || defaultValue;\n    }\n    \n    // Parse JSON for other data\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error('Error loading from localStorage:', error);\n    return defaultValue;\n  }\n};\n\n// Save data to localStorage\nexport const save = (key, value) => {\n  try {\n    // Handle background images differently (store as raw data URL)\n    if (key === STORAGE.BG) {\n      if (value && value.trim() !== '') {\n        localStorage.setItem(key, value);\n      } else {\n        localStorage.removeItem(key);\n      }\n      return;\n    }\n    \n    // JSON stringify for other data\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n    \n    // If it's a quota exceeded error, try to provide helpful feedback\n    if (error.name === 'QuotaExceededError') {\n      throw new Error('Storage quota exceeded. Try uploading a smaller image.');\n    }\n    \n    throw error;\n  }\n};\n\n// Clear all app data\nexport const clearAll = () => {\n  Object.values(STORAGE).forEach(key => {\n    localStorage.removeItem(key);\n  });\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAG;EACrBC,KAAK,EAAE,4BAA4B;EACnCC,MAAM,EAAE,6BAA6B;EACrCC,SAAS,EAAE,gCAAgC;EAC3CC,KAAK,EAAE,4BAA4B;EACnCC,EAAE,EAAE;AACN,CAAC;;AAED;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,YAAY,GAAG,IAAI,KAAK;EAChD,IAAI;IACF,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;;IAEtC;IACA,IAAIA,GAAG,KAAKP,OAAO,CAACK,EAAE,EAAE;MACtB,OAAOI,IAAI,IAAID,YAAY;IAC7B;;IAEA;IACA,OAAOC,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAGD,YAAY;EAC/C,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAON,YAAY;EACrB;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,IAAI,GAAGA,CAACT,GAAG,EAAEU,KAAK,KAAK;EAClC,IAAI;IACF;IACA,IAAIV,GAAG,KAAKP,OAAO,CAACK,EAAE,EAAE;MACtB,IAAIY,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAChCR,YAAY,CAACS,OAAO,CAACZ,GAAG,EAAEU,KAAK,CAAC;MAClC,CAAC,MAAM;QACLP,YAAY,CAACU,UAAU,CAACb,GAAG,CAAC;MAC9B;MACA;IACF;;IAEA;IACAG,YAAY,CAACS,OAAO,CAACZ,GAAG,EAAEK,IAAI,CAACS,SAAS,CAACJ,KAAK,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;;IAErD;IACA,IAAIA,KAAK,CAACQ,IAAI,KAAK,oBAAoB,EAAE;MACvC,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC3E;IAEA,MAAMT,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAGA,CAAA,KAAM;EAC5BC,MAAM,CAACC,MAAM,CAAC1B,OAAO,CAAC,CAAC2B,OAAO,CAACpB,GAAG,IAAI;IACpCG,YAAY,CAACU,UAAU,CAACb,GAAG,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}