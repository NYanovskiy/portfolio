{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { format, subDays, isSameDay } from 'date-fns';\nimport { safeParse } from '../utils/dateUtils';\nexport const useData = (tasks, habits) => {\n  _s();\n  return useMemo(() => {\n    // Generate last 7 days\n    const last7Days = Array.from({\n      length: 7\n    }, (_, i) => {\n      const date = subDays(new Date(), 6 - i);\n      return format(date, 'yyyy-MM-dd');\n    });\n\n    // Completed tasks per day\n    const completedTasksPerDay = {};\n    last7Days.forEach(date => {\n      completedTasksPerDay[date] = tasks.filter(task => {\n        const taskDate = safeParse(task.datetime);\n        return taskDate && isSameDay(taskDate, new Date(date)) && task.completed;\n      }).length;\n    });\n\n    // Habit counts per day\n    const habitCountsPerDay = {};\n    last7Days.forEach(date => {\n      habitCountsPerDay[date] = habits.filter(habit => {\n        return habit.completedDates && habit.completedDates.includes(date);\n      }).length;\n    });\n\n    // Overall task completion percentage\n    const totalTasks = tasks.length;\n    const completedTasks = tasks.filter(task => task.completed).length;\n    const taskCompletionPercentage = totalTasks > 0 ? Math.round(completedTasks / totalTasks * 100) : 0;\n    return {\n      completedTasksPerDay,\n      habitCountsPerDay,\n      taskCompletionPercentage\n    };\n  }, [tasks, habits]);\n};\n_s(useData, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"names":["useMemo","format","subDays","isSameDay","safeParse","useData","tasks","habits","_s","last7Days","Array","from","length","_","i","date","Date","completedTasksPerDay","forEach","filter","task","taskDate","datetime","completed","habitCountsPerDay","habit","completedDates","includes","totalTasks","completedTasks","taskCompletionPercentage","Math","round"],"sources":["C:/Users/Никита/Desktop/cur/src/hooks/useData.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport { format, subDays, isSameDay } from 'date-fns';\r\nimport { safeParse } from '../utils/dateUtils';\r\n\r\nexport const useData = (tasks, habits) => {\r\n  return useMemo(() => {\r\n    // Generate last 7 days\r\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\r\n      const date = subDays(new Date(), 6 - i);\r\n      return format(date, 'yyyy-MM-dd');\r\n    });\r\n\r\n    // Completed tasks per day\r\n    const completedTasksPerDay = {};\r\n    last7Days.forEach(date => {\r\n      completedTasksPerDay[date] = tasks.filter(task => {\r\n        const taskDate = safeParse(task.datetime);\r\n        return taskDate && isSameDay(taskDate, new Date(date)) && task.completed;\r\n      }).length;\r\n    });\r\n\r\n    // Habit counts per day\r\n    const habitCountsPerDay = {};\r\n    last7Days.forEach(date => {\r\n      habitCountsPerDay[date] = habits.filter(habit => {\r\n        return habit.completedDates && habit.completedDates.includes(date);\r\n      }).length;\r\n    });\r\n\r\n    // Overall task completion percentage\r\n    const totalTasks = tasks.length;\r\n    const completedTasks = tasks.filter(task => task.completed).length;\r\n    const taskCompletionPercentage = totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;\r\n\r\n    return {\r\n      completedTasksPerDay,\r\n      habitCountsPerDay,\r\n      taskCompletionPercentage\r\n    };\r\n  }, [tasks, habits]);\r\n};\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,MAAM,EAAEC,OAAO,EAAEC,SAAS,QAAQ,UAAU;AACrD,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAAAC,EAAA;EACxC,OAAOR,OAAO,CAAC,MAAM;IACnB;IACA,MAAMS,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MACpD,MAAMC,IAAI,GAAGb,OAAO,CAAC,IAAIc,IAAI,CAAC,CAAC,EAAE,CAAC,GAAGF,CAAC,CAAC;MACvC,OAAOb,MAAM,CAACc,IAAI,EAAE,YAAY,CAAC;IACnC,CAAC,CAAC;;IAEF;IACA,MAAME,oBAAoB,GAAG,CAAC,CAAC;IAC/BR,SAAS,CAACS,OAAO,CAACH,IAAI,IAAI;MACxBE,oBAAoB,CAACF,IAAI,CAAC,GAAGT,KAAK,CAACa,MAAM,CAACC,IAAI,IAAI;QAChD,MAAMC,QAAQ,GAAGjB,SAAS,CAACgB,IAAI,CAACE,QAAQ,CAAC;QACzC,OAAOD,QAAQ,IAAIlB,SAAS,CAACkB,QAAQ,EAAE,IAAIL,IAAI,CAACD,IAAI,CAAC,CAAC,IAAIK,IAAI,CAACG,SAAS;MAC1E,CAAC,CAAC,CAACX,MAAM;IACX,CAAC,CAAC;;IAEF;IACA,MAAMY,iBAAiB,GAAG,CAAC,CAAC;IAC5Bf,SAAS,CAACS,OAAO,CAACH,IAAI,IAAI;MACxBS,iBAAiB,CAACT,IAAI,CAAC,GAAGR,MAAM,CAACY,MAAM,CAACM,KAAK,IAAI;QAC/C,OAAOA,KAAK,CAACC,cAAc,IAAID,KAAK,CAACC,cAAc,CAACC,QAAQ,CAACZ,IAAI,CAAC;MACpE,CAAC,CAAC,CAACH,MAAM;IACX,CAAC,CAAC;;IAEF;IACA,MAAMgB,UAAU,GAAGtB,KAAK,CAACM,MAAM;IAC/B,MAAMiB,cAAc,GAAGvB,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACG,SAAS,CAAC,CAACX,MAAM;IAClE,MAAMkB,wBAAwB,GAAGF,UAAU,GAAG,CAAC,GAAGG,IAAI,CAACC,KAAK,CAAEH,cAAc,GAAGD,UAAU,GAAI,GAAG,CAAC,GAAG,CAAC;IAErG,OAAO;MACLX,oBAAoB;MACpBO,iBAAiB;MACjBM;IACF,CAAC;EACH,CAAC,EAAE,CAACxB,KAAK,EAAEC,MAAM,CAAC,CAAC;AACrB,CAAC;AAACC,EAAA,CApCWH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}