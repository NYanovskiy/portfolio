{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u0430\\\\Desktop\\\\cur\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { v4 as uuidv4 } from 'uuid';\nimport { load, save, STORAGE } from './utils/storage';\nimport { useTheme } from './hooks/useTheme';\nimport { useData } from './hooks/useData';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport Charts from './components/Charts';\nimport HabitForm from './components/HabitForm';\nimport HabitList from './components/HabitList';\nimport Settings from './components/Settings';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [habits, setHabits] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [taskForm, setTaskForm] = useState({\n    title: '',\n    date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\")\n  });\n  const [habitForm, setHabitForm] = useState({\n    title: '',\n    cadence: 'daily'\n  });\n\n  // Load data from localStorage\n  useEffect(() => {\n    const savedTasks = load(STORAGE.TASKS, []);\n    const savedHabits = load(STORAGE.HABITS, []);\n    const savedTheme = load(STORAGE.THEME, 'light');\n    setTasks(savedTasks);\n    setHabits(savedHabits);\n    setTheme(savedTheme);\n  }, []);\n\n  // Apply theme\n  useTheme(theme);\n\n  // Get computed data for charts\n  const chartData = useData(tasks, habits);\n\n  // Save data to localStorage\n  const saveData = (newTasks, newHabits, newTheme) => {\n    save(STORAGE.TASKS, newTasks);\n    save(STORAGE.HABITS, newHabits);\n    save(STORAGE.THEME, newTheme);\n  };\n\n  // Task actions\n  const addTask = () => {\n    if (!taskForm.title.trim()) return;\n    const newTask = {\n      id: uuidv4(),\n      title: taskForm.title,\n      datetime: taskForm.date,\n      completed: false\n    };\n    const newTasks = [...tasks, newTask];\n    setTasks(newTasks);\n    setTaskForm({\n      title: '',\n      date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\")\n    });\n    saveData(newTasks, habits, theme);\n  };\n  const toggleTask = taskId => {\n    const newTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(newTasks);\n    saveData(newTasks, habits, theme);\n  };\n  const removeTask = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n    saveData(newTasks, habits, theme);\n  };\n\n  // Habit actions\n  const addHabit = () => {\n    if (!habitForm.title.trim()) return;\n    const newHabit = {\n      id: uuidv4(),\n      title: habitForm.title,\n      cadence: habitForm.cadence,\n      completedDates: []\n    };\n    const newHabits = [...habits, newHabit];\n    setHabits(newHabits);\n    setHabitForm({\n      title: '',\n      cadence: 'daily'\n    });\n    saveData(tasks, newHabits, theme);\n  };\n  const toggleHabit = habitId => {\n    const today = format(selectedDate, 'yyyy-MM-dd');\n    const newHabits = habits.map(habit => {\n      if (habit.id === habitId) {\n        const completedDates = habit.completedDates || [];\n        const isCompleted = completedDates.includes(today);\n        if (isCompleted) {\n          return {\n            ...habit,\n            completedDates: completedDates.filter(date => date !== today)\n          };\n        } else {\n          return {\n            ...habit,\n            completedDates: [...completedDates, today]\n          };\n        }\n      }\n      return habit;\n    });\n    setHabits(newHabits);\n    saveData(tasks, newHabits, theme);\n  };\n  const removeHabit = habitId => {\n    const newHabits = habits.filter(habit => habit.id !== habitId);\n    setHabits(newHabits);\n    saveData(tasks, newHabits, theme);\n  };\n\n  // Settings actions\n  const handleThemeChange = newTheme => {\n    setTheme(newTheme);\n    saveData(tasks, habits, newTheme);\n  };\n  const fillSampleData = () => {\n    const sampleTasks = [{\n      id: uuidv4(),\n      title: 'Изучить React',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'09:00\"),\n      completed: true\n    }, {\n      id: uuidv4(),\n      title: 'Сделать упражнения',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'18:00\"),\n      completed: false\n    }, {\n      id: uuidv4(),\n      title: 'Прочитать книгу',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'20:00\"),\n      completed: false\n    }];\n    const sampleHabits = [{\n      id: uuidv4(),\n      title: 'Утренняя зарядка',\n      cadence: 'daily',\n      completedDates: [format(new Date(), 'yyyy-MM-dd')]\n    }, {\n      id: uuidv4(),\n      title: 'Пить воду',\n      cadence: 'daily',\n      completedDates: []\n    }, {\n      id: uuidv4(),\n      title: 'Уборка дома',\n      cadence: 'weekly',\n      completedDates: []\n    }];\n    setTasks(sampleTasks);\n    setHabits(sampleHabits);\n    saveData(sampleTasks, sampleHabits, theme);\n  };\n  const resetData = () => {\n    setTasks([]);\n    setHabits([]);\n    saveData([], [], theme);\n  };\n\n  // Date change handler\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg)',\n      color: 'var(--text)',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSettingsClick: () => setSettingsOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          tasks: tasks,\n          selectedDate: selectedDate,\n          onDateChange: handleDateChange,\n          chartData: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"\\u041F\\u043B\\u0430\\u043D \\u043D\\u0430 \", format(selectedDate, 'dd MMMM yyyy', {\n                locale: ru\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n              taskForm: taskForm,\n              setTaskForm: setTaskForm,\n              onSubmit: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: tasks,\n              selectedDate: selectedDate,\n              onToggleTask: toggleTask,\n              onRemoveTask: removeTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Charts, {\n            completedTasksPerDay: chartData.completedTasksPerDay,\n            habitCountsPerDay: chartData.habitCountsPerDay,\n            taskCompletionPercentage: chartData.taskCompletionPercentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u041F\\u0440\\u0438\\u0432\\u044B\\u0447\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HabitForm, {\n              habitForm: habitForm,\n              setHabitForm: setHabitForm,\n              onSubmit: addHabit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n              habits: habits,\n              selectedDate: selectedDate,\n              onToggleHabit: toggleHabit,\n              onRemoveHabit: removeHabit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Settings, {\n        isOpen: settingsOpen,\n        onClose: () => setSettingsOpen(false),\n        theme: theme,\n        onThemeChange: handleThemeChange,\n        onFillSample: fillSampleData,\n        onReset: resetData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f3nYjSUcim0vonadw+zLa5Yrf0Y=\", false, function () {\n  return [useTheme, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","format","ru","v4","uuidv4","load","save","STORAGE","useTheme","useData","Header","Sidebar","TaskForm","TaskList","Charts","HabitForm","HabitList","Settings","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","habits","setHabits","theme","setTheme","selectedDate","setSelectedDate","Date","settingsOpen","setSettingsOpen","taskForm","setTaskForm","title","date","habitForm","setHabitForm","cadence","savedTasks","TASKS","savedHabits","HABITS","savedTheme","THEME","chartData","saveData","newTasks","newHabits","newTheme","addTask","trim","newTask","id","datetime","completed","toggleTask","taskId","map","task","removeTask","filter","addHabit","newHabit","completedDates","toggleHabit","habitId","today","habit","isCompleted","includes","removeHabit","handleThemeChange","fillSampleData","sampleTasks","sampleHabits","resetData","handleDateChange","style","minHeight","background","color","padding","children","className","onSettingsClick","fileName","_jsxFileName","lineNumber","columnNumber","onDateChange","locale","onSubmit","onToggleTask","onRemoveTask","completedTasksPerDay","habitCountsPerDay","taskCompletionPercentage","onToggleHabit","onRemoveHabit","isOpen","onClose","onThemeChange","onFillSample","onReset","_c","$RefreshReg$"],"sources":["C:/Users/Никита/Desktop/cur/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { load, save, STORAGE } from './utils/storage';\r\nimport { useTheme } from './hooks/useTheme';\r\nimport { useData } from './hooks/useData';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport Charts from './components/Charts';\r\nimport HabitForm from './components/HabitForm';\r\nimport HabitList from './components/HabitList';\r\nimport Settings from './components/Settings';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [habits, setHabits] = useState([]);\r\n  const [theme, setTheme] = useState('light');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const [taskForm, setTaskForm] = useState({ title: '', date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\") });\r\n  const [habitForm, setHabitForm] = useState({ title: '', cadence: 'daily' });\r\n\r\n  // Load data from localStorage\r\n  useEffect(() => {\r\n    const savedTasks = load(STORAGE.TASKS, []);\r\n    const savedHabits = load(STORAGE.HABITS, []);\r\n    const savedTheme = load(STORAGE.THEME, 'light');\r\n    \r\n    setTasks(savedTasks);\r\n    setHabits(savedHabits);\r\n    setTheme(savedTheme);\r\n  }, []);\r\n\r\n  // Apply theme\r\n  useTheme(theme);\r\n\r\n  // Get computed data for charts\r\n  const chartData = useData(tasks, habits);\r\n\r\n  // Save data to localStorage\r\n  const saveData = (newTasks, newHabits, newTheme) => {\r\n    save(STORAGE.TASKS, newTasks);\r\n    save(STORAGE.HABITS, newHabits);\r\n    save(STORAGE.THEME, newTheme);\r\n  };\r\n\r\n  // Task actions\r\n  const addTask = () => {\r\n    if (!taskForm.title.trim()) return;\r\n    \r\n    const newTask = {\r\n      id: uuidv4(),\r\n      title: taskForm.title,\r\n      datetime: taskForm.date,\r\n      completed: false\r\n    };\r\n    \r\n    const newTasks = [...tasks, newTask];\r\n    setTasks(newTasks);\r\n    setTaskForm({ title: '', date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\") });\r\n    saveData(newTasks, habits, theme);\r\n  };\r\n\r\n  const toggleTask = (taskId) => {\r\n    const newTasks = tasks.map(task => \r\n      task.id === taskId ? { ...task, completed: !task.completed } : task\r\n    );\r\n    setTasks(newTasks);\r\n    saveData(newTasks, habits, theme);\r\n  };\r\n\r\n  const removeTask = (taskId) => {\r\n    const newTasks = tasks.filter(task => task.id !== taskId);\r\n    setTasks(newTasks);\r\n    saveData(newTasks, habits, theme);\r\n  };\r\n\r\n  // Habit actions\r\n  const addHabit = () => {\r\n    if (!habitForm.title.trim()) return;\r\n    \r\n    const newHabit = {\r\n      id: uuidv4(),\r\n      title: habitForm.title,\r\n      cadence: habitForm.cadence,\r\n      completedDates: []\r\n    };\r\n    \r\n    const newHabits = [...habits, newHabit];\r\n    setHabits(newHabits);\r\n    setHabitForm({ title: '', cadence: 'daily' });\r\n    saveData(tasks, newHabits, theme);\r\n  };\r\n\r\n  const toggleHabit = (habitId) => {\r\n    const today = format(selectedDate, 'yyyy-MM-dd');\r\n    const newHabits = habits.map(habit => {\r\n      if (habit.id === habitId) {\r\n        const completedDates = habit.completedDates || [];\r\n        const isCompleted = completedDates.includes(today);\r\n        \r\n        if (isCompleted) {\r\n          return {\r\n            ...habit,\r\n            completedDates: completedDates.filter(date => date !== today)\r\n          };\r\n        } else {\r\n          return {\r\n            ...habit,\r\n            completedDates: [...completedDates, today]\r\n          };\r\n        }\r\n      }\r\n      return habit;\r\n    });\r\n    \r\n    setHabits(newHabits);\r\n    saveData(tasks, newHabits, theme);\r\n  };\r\n\r\n  const removeHabit = (habitId) => {\r\n    const newHabits = habits.filter(habit => habit.id !== habitId);\r\n    setHabits(newHabits);\r\n    saveData(tasks, newHabits, theme);\r\n  };\r\n\r\n  // Settings actions\r\n  const handleThemeChange = (newTheme) => {\r\n    setTheme(newTheme);\r\n    saveData(tasks, habits, newTheme);\r\n  };\r\n\r\n  const fillSampleData = () => {\r\n    const sampleTasks = [\r\n      { id: uuidv4(), title: 'Изучить React', datetime: format(new Date(), \"yyyy-MM-dd'T'09:00\"), completed: true },\r\n      { id: uuidv4(), title: 'Сделать упражнения', datetime: format(new Date(), \"yyyy-MM-dd'T'18:00\"), completed: false },\r\n      { id: uuidv4(), title: 'Прочитать книгу', datetime: format(new Date(), \"yyyy-MM-dd'T'20:00\"), completed: false }\r\n    ];\r\n    \r\n    const sampleHabits = [\r\n      { id: uuidv4(), title: 'Утренняя зарядка', cadence: 'daily', completedDates: [format(new Date(), 'yyyy-MM-dd')] },\r\n      { id: uuidv4(), title: 'Пить воду', cadence: 'daily', completedDates: [] },\r\n      { id: uuidv4(), title: 'Уборка дома', cadence: 'weekly', completedDates: [] }\r\n    ];\r\n    \r\n    setTasks(sampleTasks);\r\n    setHabits(sampleHabits);\r\n    saveData(sampleTasks, sampleHabits, theme);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setTasks([]);\r\n    setHabits([]);\r\n    saveData([], [], theme);\r\n  };\r\n\r\n  // Date change handler\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      minHeight: '100vh', \r\n      background: 'var(--bg)', \r\n      color: 'var(--text)',\r\n      padding: '20px'\r\n    }}>\r\n      <div className=\"container\">\r\n        <Header onSettingsClick={() => setSettingsOpen(true)} />\r\n        \r\n        <div className=\"grid\">\r\n          <Sidebar \r\n            tasks={tasks}\r\n            selectedDate={selectedDate}\r\n            onDateChange={handleDateChange}\r\n            chartData={chartData}\r\n          />\r\n          \r\n          <div>\r\n            <div className=\"card\">\r\n              <h3>План на {format(selectedDate, 'dd MMMM yyyy', { locale: ru })}</h3>\r\n              \r\n              <TaskForm \r\n                taskForm={taskForm}\r\n                setTaskForm={setTaskForm}\r\n                onSubmit={addTask}\r\n              />\r\n              \r\n              <TaskList \r\n                tasks={tasks}\r\n                selectedDate={selectedDate}\r\n                onToggleTask={toggleTask}\r\n                onRemoveTask={removeTask}\r\n              />\r\n            </div>\r\n            \r\n            <Charts \r\n              completedTasksPerDay={chartData.completedTasksPerDay}\r\n              habitCountsPerDay={chartData.habitCountsPerDay}\r\n              taskCompletionPercentage={chartData.taskCompletionPercentage}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <div className=\"card\">\r\n              <h3>Привычки</h3>\r\n              \r\n              <HabitForm \r\n                habitForm={habitForm}\r\n                setHabitForm={setHabitForm}\r\n                onSubmit={addHabit}\r\n              />\r\n              \r\n              <HabitList \r\n                habits={habits}\r\n                selectedDate={selectedDate}\r\n                onToggleHabit={toggleHabit}\r\n                onRemoveHabit={removeHabit}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <Settings \r\n          isOpen={settingsOpen}\r\n          onClose={() => setSettingsOpen(false)}\r\n          theme={theme}\r\n          onThemeChange={handleThemeChange}\r\n          onFillSample={fillSampleData}\r\n          onReset={resetData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}