{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u0430\\\\Desktop\\\\cur\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { v4 as uuidv4 } from 'uuid';\nimport { load, save, STORAGE } from './utils/storage';\nimport { useTheme } from './hooks/useTheme';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport HabitForm from './components/HabitForm';\nimport HabitList from './components/HabitList';\nimport Settings from './components/Settings';\nimport PomodoroTimer from './components/PomodoroTimer';\nimport Statistics from './components/Statistics';\nimport VictoryAnimation from './components/VictoryAnimation';\nimport ToggleButton from './components/ToggleButton';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [habits, setHabits] = useState([]);\n  const [pomodoros, setPomodoros] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [pomodoroOpen, setPomodoroOpen] = useState(false);\n  const [statisticsOpen, setStatisticsOpen] = useState(false);\n  const [achievement, setAchievement] = useState(null);\n  const [taskForm, setTaskForm] = useState({\n    title: '',\n    date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\")\n  });\n  const [habitForm, setHabitForm] = useState({\n    title: '',\n    cadence: 'daily'\n  });\n\n  // Load data from localStorage\n  useEffect(() => {\n    const savedTasks = load(STORAGE.TASKS, []);\n    const savedHabits = load(STORAGE.HABITS, []);\n    const savedPomodoros = load(STORAGE.POMODOROS, []);\n    const savedTheme = load(STORAGE.THEME, 'light');\n    setTasks(savedTasks);\n    setHabits(savedHabits);\n    setPomodoros(savedPomodoros);\n    setTheme(savedTheme);\n  }, []);\n\n  // Apply theme\n  useTheme(theme);\n\n  // Control main page scroll when modals are open\n  useEffect(() => {\n    const isAnyModalOpen = settingsOpen || pomodoroOpen || statisticsOpen;\n    if (isAnyModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup function to remove class when component unmounts\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [settingsOpen, pomodoroOpen, statisticsOpen]);\n\n  // Save data to localStorage\n  const saveData = (newTasks, newHabits, newPomodoros, newTheme) => {\n    save(STORAGE.TASKS, newTasks);\n    save(STORAGE.HABITS, newHabits);\n    save(STORAGE.POMODOROS, newPomodoros);\n    save(STORAGE.THEME, newTheme);\n  };\n\n  // Task actions\n  const addTask = () => {\n    if (!taskForm.title.trim()) return;\n    const newTask = {\n      id: uuidv4(),\n      title: taskForm.title,\n      datetime: taskForm.date,\n      completed: false\n    };\n    const newTasks = [...tasks, newTask];\n    setTasks(newTasks);\n    setTaskForm({\n      title: '',\n      date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\")\n    });\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n  const toggleTask = taskId => {\n    const newTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(newTasks);\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n  const removeTask = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n\n  // Habit actions\n  const addHabit = () => {\n    if (!habitForm.title.trim()) return;\n    const newHabit = {\n      id: uuidv4(),\n      title: habitForm.title,\n      cadence: habitForm.cadence,\n      completedDates: []\n    };\n    const newHabits = [...habits, newHabit];\n    setHabits(newHabits);\n    setHabitForm({\n      title: '',\n      cadence: 'daily'\n    });\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n  const toggleHabit = habitId => {\n    const today = format(selectedDate, 'yyyy-MM-dd');\n    const newHabits = habits.map(habit => {\n      if (habit.id === habitId) {\n        const completedDates = habit.completedDates || [];\n        const isCompleted = completedDates.includes(today);\n        if (isCompleted) {\n          return {\n            ...habit,\n            completedDates: completedDates.filter(date => date !== today)\n          };\n        } else {\n          return {\n            ...habit,\n            completedDates: [...completedDates, today]\n          };\n        }\n      }\n      return habit;\n    });\n    setHabits(newHabits);\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n  const removeHabit = habitId => {\n    const newHabits = habits.filter(habit => habit.id !== habitId);\n    setHabits(newHabits);\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n\n  // Pomodoro actions\n  const handlePomodoroComplete = count => {\n    const today = format(new Date(), 'yyyy-MM-dd');\n    const newPomodoro = {\n      id: uuidv4(),\n      date: today,\n      count: count\n    };\n    const newPomodoros = [...pomodoros, newPomodoro];\n    setPomodoros(newPomodoros);\n    saveData(tasks, habits, newPomodoros, theme);\n  };\n\n  // Settings actions\n  const handleThemeChange = newTheme => {\n    setTheme(newTheme);\n    saveData(tasks, habits, pomodoros, newTheme);\n  };\n  const fillSampleData = () => {\n    const sampleTasks = [{\n      id: uuidv4(),\n      title: 'Изучить React',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'09:00\"),\n      completed: true\n    }, {\n      id: uuidv4(),\n      title: 'Сделать упражнения',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'18:00\"),\n      completed: false\n    }, {\n      id: uuidv4(),\n      title: 'Прочитать книгу',\n      datetime: format(new Date(), \"yyyy-MM-dd'T'20:00\"),\n      completed: false\n    }];\n    const sampleHabits = [{\n      id: uuidv4(),\n      title: 'Утренняя зарядка',\n      cadence: 'daily',\n      completedDates: [format(new Date(), 'yyyy-MM-dd')]\n    }, {\n      id: uuidv4(),\n      title: 'Пить воду',\n      cadence: 'daily',\n      completedDates: []\n    }, {\n      id: uuidv4(),\n      title: 'Уборка дома',\n      cadence: 'weekly',\n      completedDates: []\n    }];\n    const samplePomodoros = [{\n      id: uuidv4(),\n      date: format(new Date(), 'yyyy-MM-dd'),\n      count: 3\n    }];\n    setTasks(sampleTasks);\n    setHabits(sampleHabits);\n    setPomodoros(samplePomodoros);\n    saveData(sampleTasks, sampleHabits, samplePomodoros, theme);\n  };\n  const resetData = () => {\n    setTasks([]);\n    setHabits([]);\n    setPomodoros([]);\n    saveData([], [], [], theme);\n  };\n\n  // Date change handler\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  // Achievement handler\n  const handleAchievement = achievementData => {\n    setAchievement(achievementData);\n  };\n\n  // Close achievement animation\n  const closeAchievement = () => {\n    setAchievement(null);\n  };\n\n  // Get today's pomodoros\n  const todayPomodoros = pomodoros.filter(p => p.date === format(new Date(), 'yyyy-MM-dd')).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg)',\n      color: 'var(--text)',\n      padding: '14px' /* Уменьшено с 20px на 14px (на 30%) */\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSettingsClick: () => setSettingsOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8,\n          /* Уменьшено с 12px на 8px (на 33%) */\n          marginBottom: 14,\n          /* Уменьшено с 20px на 14px (на 30%) */\n          flexWrap: 'wrap',\n          flexDirection: 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 8,\n            /* Уменьшено с 12px на 8px (на 33%) */\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            variant: \"primary\",\n            size: \"large\",\n            onClick: () => setPomodoroOpen(true),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8,\n              flex: '1 1 auto',\n              minWidth: '200px'\n            },\n            children: [\"\\uD83C\\uDF45 \\u0422\\u0430\\u0439\\u043C\\u0435\\u0440 \\u041F\\u043E\\u043C\\u043E\\u0434\\u043E\\u0440\\u043E\", todayPomodoros > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                background: 'rgba(255,255,255,0.2)',\n                borderRadius: '50%',\n                width: '20px',\n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '0.75rem',\n                fontWeight: '600'\n              },\n              children: todayPomodoros\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            variant: \"success\",\n            size: \"large\",\n            onClick: () => setStatisticsOpen(true),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8,\n              flex: '1 1 auto',\n              minWidth: '200px'\n            },\n            children: \"\\uD83D\\uDCCA \\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0430\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          tasks: tasks,\n          selectedDate: selectedDate,\n          onDateChange: handleDateChange,\n          pomodoros: pomodoros,\n          habits: habits,\n          onAchievement: handleAchievement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"\\u041F\\u043B\\u0430\\u043D \\u043D\\u0430 \", format(selectedDate, 'dd MMMM yyyy', {\n                locale: ru\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n              taskForm: taskForm,\n              setTaskForm: setTaskForm,\n              onSubmit: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: tasks,\n              selectedDate: selectedDate,\n              onToggleTask: toggleTask,\n              onRemoveTask: removeTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u041F\\u0440\\u0438\\u0432\\u044B\\u0447\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HabitForm, {\n              habitForm: habitForm,\n              setHabitForm: setHabitForm,\n              onSubmit: addHabit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n              habits: habits,\n              selectedDate: selectedDate,\n              onToggleHabit: toggleHabit,\n              onRemoveHabit: removeHabit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Settings, {\n        isOpen: settingsOpen,\n        onClose: () => setSettingsOpen(false),\n        theme: theme,\n        onThemeChange: handleThemeChange,\n        onFillSample: fillSampleData,\n        onReset: resetData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PomodoroTimer, {\n        isOpen: pomodoroOpen,\n        onClose: () => setPomodoroOpen(false),\n        onPomodoroComplete: handlePomodoroComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        isOpen: statisticsOpen,\n        onClose: () => setStatisticsOpen(false),\n        tasks: tasks,\n        habits: habits,\n        pomodoros: pomodoros\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VictoryAnimation, {\n        achievement: achievement,\n        onClose: closeAchievement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f0NaeOTlG0agyPkeF8ARRu071Sg=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","format","ru","v4","uuidv4","load","save","STORAGE","useTheme","Header","Sidebar","TaskForm","TaskList","HabitForm","HabitList","Settings","PomodoroTimer","Statistics","VictoryAnimation","ToggleButton","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","habits","setHabits","pomodoros","setPomodoros","theme","setTheme","selectedDate","setSelectedDate","Date","settingsOpen","setSettingsOpen","pomodoroOpen","setPomodoroOpen","statisticsOpen","setStatisticsOpen","achievement","setAchievement","taskForm","setTaskForm","title","date","habitForm","setHabitForm","cadence","savedTasks","TASKS","savedHabits","HABITS","savedPomodoros","POMODOROS","savedTheme","THEME","isAnyModalOpen","document","body","classList","add","remove","saveData","newTasks","newHabits","newPomodoros","newTheme","addTask","trim","newTask","id","datetime","completed","toggleTask","taskId","map","task","removeTask","filter","addHabit","newHabit","completedDates","toggleHabit","habitId","today","habit","isCompleted","includes","removeHabit","handlePomodoroComplete","count","newPomodoro","handleThemeChange","fillSampleData","sampleTasks","sampleHabits","samplePomodoros","resetData","handleDateChange","handleAchievement","achievementData","closeAchievement","todayPomodoros","p","length","style","minHeight","background","color","padding","children","className","onSettingsClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginBottom","flexWrap","flexDirection","variant","size","onClick","alignItems","flex","minWidth","borderRadius","width","height","justifyContent","fontSize","fontWeight","onDateChange","onAchievement","locale","onSubmit","onToggleTask","onRemoveTask","onToggleHabit","onRemoveHabit","isOpen","onClose","onThemeChange","onFillSample","onReset","onPomodoroComplete","_c","$RefreshReg$"],"sources":["C:/Users/Никита/Desktop/cur/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { v4 as uuidv4 } from 'uuid';\nimport { load, save, STORAGE } from './utils/storage';\nimport { useTheme } from './hooks/useTheme';\n\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\n\nimport HabitForm from './components/HabitForm';\nimport HabitList from './components/HabitList';\nimport Settings from './components/Settings';\nimport PomodoroTimer from './components/PomodoroTimer';\nimport Statistics from './components/Statistics';\nimport VictoryAnimation from './components/VictoryAnimation';\nimport ToggleButton from './components/ToggleButton';\n\nimport './index.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [habits, setHabits] = useState([]);\n  const [pomodoros, setPomodoros] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [pomodoroOpen, setPomodoroOpen] = useState(false);\n  const [statisticsOpen, setStatisticsOpen] = useState(false);\n  const [achievement, setAchievement] = useState(null);\n  const [taskForm, setTaskForm] = useState({ title: '', date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\") });\n  const [habitForm, setHabitForm] = useState({ title: '', cadence: 'daily' });\n\n  // Load data from localStorage\n  useEffect(() => {\n    const savedTasks = load(STORAGE.TASKS, []);\n    const savedHabits = load(STORAGE.HABITS, []);\n    const savedPomodoros = load(STORAGE.POMODOROS, []);\n    const savedTheme = load(STORAGE.THEME, 'light');\n    \n    setTasks(savedTasks);\n    setHabits(savedHabits);\n    setPomodoros(savedPomodoros);\n    setTheme(savedTheme);\n  }, []);\n\n  // Apply theme\n  useTheme(theme);\n\n\n\n  // Control main page scroll when modals are open\n  useEffect(() => {\n    const isAnyModalOpen = settingsOpen || pomodoroOpen || statisticsOpen;\n    \n    if (isAnyModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    // Cleanup function to remove class when component unmounts\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [settingsOpen, pomodoroOpen, statisticsOpen]);\n\n  // Save data to localStorage\n  const saveData = (newTasks, newHabits, newPomodoros, newTheme) => {\n    save(STORAGE.TASKS, newTasks);\n    save(STORAGE.HABITS, newHabits);\n    save(STORAGE.POMODOROS, newPomodoros);\n    save(STORAGE.THEME, newTheme);\n  };\n\n  // Task actions\n  const addTask = () => {\n    if (!taskForm.title.trim()) return;\n    \n    const newTask = {\n      id: uuidv4(),\n      title: taskForm.title,\n      datetime: taskForm.date,\n      completed: false\n    };\n    \n    const newTasks = [...tasks, newTask];\n    setTasks(newTasks);\n    setTaskForm({ title: '', date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\") });\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n\n  const toggleTask = (taskId) => {\n    const newTasks = tasks.map(task => \n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(newTasks);\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n\n  const removeTask = (taskId) => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n    saveData(newTasks, habits, pomodoros, theme);\n  };\n\n  // Habit actions\n  const addHabit = () => {\n    if (!habitForm.title.trim()) return;\n    \n    const newHabit = {\n      id: uuidv4(),\n      title: habitForm.title,\n      cadence: habitForm.cadence,\n      completedDates: []\n    };\n    \n    const newHabits = [...habits, newHabit];\n    setHabits(newHabits);\n    setHabitForm({ title: '', cadence: 'daily' });\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n\n  const toggleHabit = (habitId) => {\n    const today = format(selectedDate, 'yyyy-MM-dd');\n    const newHabits = habits.map(habit => {\n      if (habit.id === habitId) {\n        const completedDates = habit.completedDates || [];\n        const isCompleted = completedDates.includes(today);\n        \n        if (isCompleted) {\n          return {\n            ...habit,\n            completedDates: completedDates.filter(date => date !== today)\n          };\n        } else {\n          return {\n            ...habit,\n            completedDates: [...completedDates, today]\n          };\n        }\n      }\n      return habit;\n    });\n    \n    setHabits(newHabits);\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n\n  const removeHabit = (habitId) => {\n    const newHabits = habits.filter(habit => habit.id !== habitId);\n    setHabits(newHabits);\n    saveData(tasks, newHabits, pomodoros, theme);\n  };\n\n  // Pomodoro actions\n  const handlePomodoroComplete = (count) => {\n    const today = format(new Date(), 'yyyy-MM-dd');\n    const newPomodoro = {\n      id: uuidv4(),\n      date: today,\n      count: count\n    };\n    \n    const newPomodoros = [...pomodoros, newPomodoro];\n    setPomodoros(newPomodoros);\n    saveData(tasks, habits, newPomodoros, theme);\n  };\n\n  // Settings actions\n  const handleThemeChange = (newTheme) => {\n    setTheme(newTheme);\n    saveData(tasks, habits, pomodoros, newTheme);\n  };\n\n  const fillSampleData = () => {\n    const sampleTasks = [\n      { id: uuidv4(), title: 'Изучить React', datetime: format(new Date(), \"yyyy-MM-dd'T'09:00\"), completed: true },\n      { id: uuidv4(), title: 'Сделать упражнения', datetime: format(new Date(), \"yyyy-MM-dd'T'18:00\"), completed: false },\n      { id: uuidv4(), title: 'Прочитать книгу', datetime: format(new Date(), \"yyyy-MM-dd'T'20:00\"), completed: false }\n    ];\n    \n    const sampleHabits = [\n      { id: uuidv4(), title: 'Утренняя зарядка', cadence: 'daily', completedDates: [format(new Date(), 'yyyy-MM-dd')] },\n      { id: uuidv4(), title: 'Пить воду', cadence: 'daily', completedDates: [] },\n      { id: uuidv4(), title: 'Уборка дома', cadence: 'weekly', completedDates: [] }\n    ];\n\n    const samplePomodoros = [\n      { id: uuidv4(), date: format(new Date(), 'yyyy-MM-dd'), count: 3 }\n    ];\n    \n    setTasks(sampleTasks);\n    setHabits(sampleHabits);\n    setPomodoros(samplePomodoros);\n    saveData(sampleTasks, sampleHabits, samplePomodoros, theme);\n  };\n\n  const resetData = () => {\n    setTasks([]);\n    setHabits([]);\n    setPomodoros([]);\n    saveData([], [], [], theme);\n  };\n\n  // Date change handler\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  \n  // Achievement handler\n  const handleAchievement = (achievementData) => {\n    setAchievement(achievementData);\n  };\n  \n  // Close achievement animation\n  const closeAchievement = () => {\n    setAchievement(null);\n  };\n\n  // Get today's pomodoros\n  const todayPomodoros = pomodoros.filter(p => p.date === format(new Date(), 'yyyy-MM-dd')).length;\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: 'var(--bg)', \n      color: 'var(--text)',\n      padding: '14px' /* Уменьшено с 20px на 14px (на 30%) */\n    }}>\n      <div className=\"container\">\n        <Header onSettingsClick={() => setSettingsOpen(true)} />\n        \n        {/* Quick action buttons - Responsive */}\n        <div style={{ \n          display: 'flex', \n          gap: 8, /* Уменьшено с 12px на 8px (на 33%) */\n          marginBottom: 14, /* Уменьшено с 20px на 14px (на 30%) */\n          flexWrap: 'wrap',\n          flexDirection: 'column'\n        }}>\n          <div style={{ \n            display: 'flex', \n            gap: 8, /* Уменьшено с 12px на 8px (на 33%) */\n            flexWrap: 'wrap'\n          }}>\n            <ToggleButton\n              variant=\"primary\"\n              size=\"large\"\n              onClick={() => setPomodoroOpen(true)}\n              style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: 8,\n                flex: '1 1 auto',\n                minWidth: '200px'\n              }}\n            >\n              🍅 Таймер Помодоро\n              {todayPomodoros > 0 && (\n                <span style={{ \n                  background: 'rgba(255,255,255,0.2)', \n                  borderRadius: '50%', \n                  width: '20px', \n                  height: '20px', \n                  display: 'flex', \n                  alignItems: 'center', \n                  justifyContent: 'center',\n                  fontSize: '0.75rem',\n                  fontWeight: '600'\n                }}>\n                  {todayPomodoros}\n                </span>\n              )}\n            </ToggleButton>\n            \n            <ToggleButton\n              variant=\"success\"\n              size=\"large\"\n              onClick={() => setStatisticsOpen(true)}\n              style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: 8,\n                flex: '1 1 auto',\n                minWidth: '200px'\n              }}\n            >\n              📊 Подробная статистика\n            </ToggleButton>\n          </div>\n        </div>\n        \n        <div className=\"grid\">\n          <Sidebar \n            tasks={tasks}\n            selectedDate={selectedDate}\n            onDateChange={handleDateChange}\n            pomodoros={pomodoros}\n            habits={habits}\n            onAchievement={handleAchievement}\n          />\n          \n          <div>\n            <div className=\"card\">\n              <h3>План на {format(selectedDate, 'dd MMMM yyyy', { locale: ru })}</h3>\n              \n              <TaskForm \n                taskForm={taskForm}\n                setTaskForm={setTaskForm}\n                onSubmit={addTask}\n              />\n              \n              <TaskList \n                tasks={tasks}\n                selectedDate={selectedDate}\n                onToggleTask={toggleTask}\n                onRemoveTask={removeTask}\n              />\n            </div>\n            \n\n          </div>\n          \n          <div>\n            <div className=\"card\">\n              <h3>Привычки</h3>\n              \n              <HabitForm \n                habitForm={habitForm}\n                setHabitForm={setHabitForm}\n                onSubmit={addHabit}\n              />\n              \n              <HabitList \n                habits={habits}\n                selectedDate={selectedDate}\n                onToggleHabit={toggleHabit}\n                onRemoveHabit={removeHabit}\n              />\n            </div>\n          </div>\n        </div>\n        \n        <Settings \n          isOpen={settingsOpen}\n          onClose={() => setSettingsOpen(false)}\n          theme={theme}\n          onThemeChange={handleThemeChange}\n          onFillSample={fillSampleData}\n          onReset={resetData}\n        />\n\n        <PomodoroTimer \n          isOpen={pomodoroOpen}\n          onClose={() => setPomodoroOpen(false)}\n          onPomodoroComplete={handlePomodoroComplete}\n        />\n\n        <Statistics \n          isOpen={statisticsOpen}\n          onClose={() => setStatisticsOpen(false)}\n          tasks={tasks}\n          habits={habits}\n          pomodoros={pomodoros}\n        />\n        \n        <VictoryAnimation \n          achievement={achievement}\n          onClose={closeAchievement}\n        />\n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}