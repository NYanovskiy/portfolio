{"ast":null,"code":"import{format,parseISO,isSameDay,subDays,eachDayOfInterval,startOfMonth,endOfMonth,differenceInCalendarDays}from'date-fns';// Safely parse date\nexport const safeParse=value=>{try{if(!value)return null;if(typeof value==='string')return parseISO(value);return value instanceof Date?value:new Date(value);}catch(_unused){return null;}};// Get date key for storage\nexport const keyOf=date=>{const dateTime=safeParse(date)||new Date();try{return format(dateTime,'yyyy-MM-dd');}catch(_unused2){return String(date);}};// Get last 7 days\nexport const getLast7Days=()=>{const end=new Date();const start=subDays(end,6);return eachDayOfInterval({start,end});};// Get month interval\nexport const getMonthInterval=()=>{const now=new Date();return{start:startOfMonth(now),end:endOfMonth(now)};};// Calculate days difference\nexport const getDaysDifference=(start,end)=>{return differenceInCalendarDays(end,start)+1;};","map":{"version":3,"names":["format","parseISO","isSameDay","subDays","eachDayOfInterval","startOfMonth","endOfMonth","differenceInCalendarDays","safeParse","value","Date","_unused","keyOf","date","dateTime","_unused2","String","getLast7Days","end","start","getMonthInterval","now","getDaysDifference"],"sources":["C:/Users/Никита/Desktop/GALL/p2/cur/src/utils/dateUtils.js"],"sourcesContent":["import { format, parseISO, isSameDay, subDays, eachDayOfInterval, startOfMonth, endOfMonth, differenceInCalendarDays } from 'date-fns';\r\n\r\n// Safely parse date\r\nexport const safeParse = (value) => {\r\n  try {\r\n    if (!value) return null;\r\n    if (typeof value === 'string') return parseISO(value);\r\n    return value instanceof Date ? value : new Date(value);\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\n// Get date key for storage\r\nexport const keyOf = (date) => {\r\n  const dateTime = safeParse(date) || new Date();\r\n  try {\r\n    return format(dateTime, 'yyyy-MM-dd');\r\n  } catch {\r\n    return String(date);\r\n  }\r\n};\r\n\r\n// Get last 7 days\r\nexport const getLast7Days = () => {\r\n  const end = new Date();\r\n  const start = subDays(end, 6);\r\n  return eachDayOfInterval({ start, end });\r\n};\r\n\r\n// Get month interval\r\nexport const getMonthInterval = () => {\r\n  const now = new Date();\r\n  return {\r\n    start: startOfMonth(now),\r\n    end: endOfMonth(now)\r\n  };\r\n};\r\n\r\n// Calculate days difference\r\nexport const getDaysDifference = (start, end) => {\r\n  return differenceInCalendarDays(end, start) + 1;\r\n};\r\n\r\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,iBAAiB,CAAEC,YAAY,CAAEC,UAAU,CAAEC,wBAAwB,KAAQ,UAAU,CAEtI;AACA,MAAO,MAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CAClC,GAAI,CACF,GAAI,CAACA,KAAK,CAAE,MAAO,KAAI,CACvB,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,MAAO,CAAAR,QAAQ,CAACQ,KAAK,CAAC,CACrD,MAAO,CAAAA,KAAK,WAAY,CAAAC,IAAI,CAAGD,KAAK,CAAG,GAAI,CAAAC,IAAI,CAACD,KAAK,CAAC,CACxD,CAAE,MAAAE,OAAA,CAAM,CACN,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,KAAK,CAAIC,IAAI,EAAK,CAC7B,KAAM,CAAAC,QAAQ,CAAGN,SAAS,CAACK,IAAI,CAAC,EAAI,GAAI,CAAAH,IAAI,CAAC,CAAC,CAC9C,GAAI,CACF,MAAO,CAAAV,MAAM,CAACc,QAAQ,CAAE,YAAY,CAAC,CACvC,CAAE,MAAAC,QAAA,CAAM,CACN,MAAO,CAAAC,MAAM,CAACH,IAAI,CAAC,CACrB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAR,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAS,KAAK,CAAGhB,OAAO,CAACe,GAAG,CAAE,CAAC,CAAC,CAC7B,MAAO,CAAAd,iBAAiB,CAAC,CAAEe,KAAK,CAAED,GAAI,CAAC,CAAC,CAC1C,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CACtB,MAAO,CACLS,KAAK,CAAEd,YAAY,CAACgB,GAAG,CAAC,CACxBH,GAAG,CAAEZ,UAAU,CAACe,GAAG,CACrB,CAAC,CACH,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAACH,KAAK,CAAED,GAAG,GAAK,CAC/C,MAAO,CAAAX,wBAAwB,CAACW,GAAG,CAAEC,KAAK,CAAC,CAAG,CAAC,CACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}