{"ast":null,"code":"import { format, parseISO, isSameDay, subDays, eachDayOfInterval, startOfMonth, endOfMonth, differenceInCalendarDays } from 'date-fns';\n\n// Safely parse date\nexport const safeParse = value => {\n  try {\n    if (!value) return null;\n    if (typeof value === 'string') return parseISO(value);\n    return value instanceof Date ? value : new Date(value);\n  } catch {\n    return null;\n  }\n};\n\n// Get date key for storage\nexport const keyOf = date => {\n  const dateTime = safeParse(date) || new Date();\n  try {\n    return format(dateTime, 'yyyy-MM-dd');\n  } catch {\n    return String(date);\n  }\n};\n\n// Get last 7 days\nexport const getLast7Days = () => {\n  const end = new Date();\n  const start = subDays(end, 6);\n  return eachDayOfInterval({\n    start,\n    end\n  });\n};\n\n// Get month interval\nexport const getMonthInterval = () => {\n  const now = new Date();\n  return {\n    start: startOfMonth(now),\n    end: endOfMonth(now)\n  };\n};\n\n// Calculate days difference\nexport const getDaysDifference = (start, end) => {\n  return differenceInCalendarDays(end, start) + 1;\n};","map":{"version":3,"names":["format","parseISO","isSameDay","subDays","eachDayOfInterval","startOfMonth","endOfMonth","differenceInCalendarDays","safeParse","value","Date","keyOf","date","dateTime","String","getLast7Days","end","start","getMonthInterval","now","getDaysDifference"],"sources":["C:/Users/Никита/Desktop/GALL/p2/cur/src/utils/dateUtils.js"],"sourcesContent":["import { format, parseISO, isSameDay, subDays, eachDayOfInterval, startOfMonth, endOfMonth, differenceInCalendarDays } from 'date-fns';\r\n\r\n// Safely parse date\r\nexport const safeParse = (value) => {\r\n  try {\r\n    if (!value) return null;\r\n    if (typeof value === 'string') return parseISO(value);\r\n    return value instanceof Date ? value : new Date(value);\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\n// Get date key for storage\r\nexport const keyOf = (date) => {\r\n  const dateTime = safeParse(date) || new Date();\r\n  try {\r\n    return format(dateTime, 'yyyy-MM-dd');\r\n  } catch {\r\n    return String(date);\r\n  }\r\n};\r\n\r\n// Get last 7 days\r\nexport const getLast7Days = () => {\r\n  const end = new Date();\r\n  const start = subDays(end, 6);\r\n  return eachDayOfInterval({ start, end });\r\n};\r\n\r\n// Get month interval\r\nexport const getMonthInterval = () => {\r\n  const now = new Date();\r\n  return {\r\n    start: startOfMonth(now),\r\n    end: endOfMonth(now)\r\n  };\r\n};\r\n\r\n// Calculate days difference\r\nexport const getDaysDifference = (start, end) => {\r\n  return differenceInCalendarDays(end, start) + 1;\r\n};\r\n\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,wBAAwB,QAAQ,UAAU;;AAEtI;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAClC,IAAI;IACF,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IACvB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOR,QAAQ,CAACQ,KAAK,CAAC;IACrD,OAAOA,KAAK,YAAYC,IAAI,GAAGD,KAAK,GAAG,IAAIC,IAAI,CAACD,KAAK,CAAC;EACxD,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,KAAK,GAAIC,IAAI,IAAK;EAC7B,MAAMC,QAAQ,GAAGL,SAAS,CAACI,IAAI,CAAC,IAAI,IAAIF,IAAI,CAAC,CAAC;EAC9C,IAAI;IACF,OAAOV,MAAM,CAACa,QAAQ,EAAE,YAAY,CAAC;EACvC,CAAC,CAAC,MAAM;IACN,OAAOC,MAAM,CAACF,IAAI,CAAC;EACrB;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,GAAG,GAAG,IAAIN,IAAI,CAAC,CAAC;EACtB,MAAMO,KAAK,GAAGd,OAAO,CAACa,GAAG,EAAE,CAAC,CAAC;EAC7B,OAAOZ,iBAAiB,CAAC;IAAEa,KAAK;IAAED;EAAI,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,GAAG,GAAG,IAAIT,IAAI,CAAC,CAAC;EACtB,OAAO;IACLO,KAAK,EAAEZ,YAAY,CAACc,GAAG,CAAC;IACxBH,GAAG,EAAEV,UAAU,CAACa,GAAG;EACrB,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACH,KAAK,EAAED,GAAG,KAAK;EAC/C,OAAOT,wBAAwB,CAACS,GAAG,EAAEC,KAAK,CAAC,GAAG,CAAC;AACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}